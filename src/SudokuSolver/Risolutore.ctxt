#BlueJ class context
comment0.params=griglia\ nome\ livello
comment0.target=Risolutore(Griglia,\ java.lang.String,\ int)
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ Risolutore\n
comment1.params=
comment1.target=Griglia\ getGriglia()
comment1.text=\n\ Ritorna\ la\ griglia\n
comment10.params=riga\ colonna\ valore
comment10.target=boolean\ verificaCella(int,\ int,\ int)
comment10.text=\n\ Ritorna\ true\ se\ il\ valore\ che\ si\ vuole\ inserire\ nella\ cella\ \u00E8\ valido\n
comment11.params=riga\ colonna
comment11.target=int[]\ soluzioniCella(int,\ int)
comment11.text=\n\ Ritorna\ un\ array\ con\ le\ possibili\ soluzioni\ di\ una\ cella\n
comment2.params=
comment2.target=java.lang.String\ getLog()
comment2.text=\n\ Ritorna\ il\ log\ delle\ azioni\ del\ risolutore\n
comment3.params=evento
comment3.target=void\ addLog(java.lang.String)
comment3.text=\n\ Aggiunge\ una\ riga\ al\ log\n
comment4.params=
comment4.target=void\ run()
comment4.text=\n\ Metodo\ del\ thread\n
comment5.params=
comment5.target=void\ pausa()
comment5.text=\n\ Mette\ in\ pausa\ il\ thread\n
comment6.params=
comment6.target=void\ ferma()
comment6.text=\n\ Ferma\ definitivamente\ il\ thread.\n
comment7.params=
comment7.target=boolean\ isPaused()
comment7.text=\n\ Ritorna\ true\ se\ il\ risolutore\ \u00E8\ in\ pausa\n
comment8.params=
comment8.target=boolean\ isStopped()
comment8.text=\n\ Ritorna\ true\ se\ il\ risolutore\ \u00E8\ in\ pausa\n
comment9.params=
comment9.target=boolean\ isRisolto()
comment9.text=\n\ Ritorna\ true\ se\ il\ gioco\ \u00E8\ risolto\n
numComments=12
